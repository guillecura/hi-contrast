// =============================================================================
// HAMBURGER MENU ICON
// Animations on mobile should have Important rule to override the default ones.
// =============================================================================


// Double Meat Hamburger Icon SVG
// -----------------------------------------------------------------------------
.icon-menu {
// Variables -------------------------------------------------------------------
  $color-1:        darken($primary, 10%);
  $color-2:        $primary;
  $color-3:        lighten($primary, 10%);

  $list:           $color-1 $color-2 $color-3; // one for each line
// -----------------------------------------------------------------------------

// General Styles --------------------------------------------------------------
  animation: menu-h-in .333s ease-out forwards; // Slide In animation
  appearance: none;
  background-color: $white;
  border: 0;
  box-shadow: none;
  cursor: pointer;
  display: block;
  height: $icon;
  outline: 0;
  padding: 0 $distance / 4;
  position: fixed;
  right: calc(50% - #{($site-box / 2) - ($distance * 3)});
  top: ($header-height - $icon) / 2;
  transform: translateZ(1px);
  width: #{$icon + $distance / 2};
  z-index: $z-top + 2; // over the nav menu

  @include mq(desktop) {
    right: $distance * 3;
  }

  @include mq(mobile) {
    animation: menu-h-in .333s ease-out forwards!important; // Slide In animation
    right: $distance * 1.5;
  }

  > svg {
    display: block;
    height: 100%;
    width: 100%;
  }

// Lines -----------------------------------------------------------------------
  rect {
    display: block;
    fill: $black;
    height: $line;
    transform-origin: center;
    transition: fill 50ms ease-out, width 150ms ease-out, transform 150ms ease-out;
    width: $icon;

    @each $pos-y in $list {
      $i: index($list, $pos-y);

      &:nth-child(#{$i}) {
        transform: translateY(#{$line * $i * 2.5});
        transition-delay: unquote('#{$i * 50}ms');
      }
    }
  }
// -----------------------------------------------------------------------------

// Set the hover
// -----------------------------------------------------------------------------
  &:hover rect {
    @each $color in $list {
      $i: index($list, $color);

// Animation -------------------------------------------------------------------
      @keyframes bounce-#{$i} {
        0% {width: #{$icon};}

        33% {width: #{$icon / $i};}

        66% {width: #{$icon / ($i * .333)};}

        100% {width: #{$icon / ($i * .666)};}
      }

// Hover state -----------------------------------------------------------------
      &:nth-child(#{$i}) {
        animation: bounce-#{$i} unquote('#{$i * 150}ms') ease-out forwards;
        fill: #{$color};
        width: #{$icon / ($i * .666)};
      }
    }

// Prevent hover on mobile -----------------------------------------------------
    @include mq(mobile) {
      animation: none!important;
      fill: $black!important;
      width: $icon!important;
    }
  }
// -----------------------------------------------------------------------------

// Set the on-click state (replace the &:focus selector with the active class)
// -----------------------------------------------------------------------------
  &.nav-close {
    background-color: transparent;

    rect {
      fill: $white;

// Animation -------------------------------------------------------------------
// scss-lint:disable NestingDepth
      @keyframes cross-l {
        0% {transform: translateY(#{($icon - $line) / 2});}
        33% {transform: translateY(#{($icon - $line) / 2}) rotate(-45deg);}
        100% {transform: translateY(#{($icon - $line) / 2}) rotate(-45deg);}
      }

      @keyframes cross-r {
        0% {transform: translateY(#{($icon - $line) / 2});}
        33% {transform: translateY(#{($icon - $line) / 2}) rotate(45deg);}
        100% {transform: translateY(#{($icon - $line) / 2}) rotate(45deg);}
      }

      &:nth-child(odd) {
        animation: cross-l .666s ease-out forwards;
      }

      &:nth-child(even) {
        animation: cross-r .666s ease-out forwards;
      }

// Prevent hover on mobile -----------------------------------------------------
      @include mq(mobile) {
        fill: $white!important;

        &:nth-child(odd) {animation: cross-l .666s ease-out forwards!important;}

        &:nth-child(even) {animation: cross-r .666s ease-out forwards!important;}
      }
// -----------------------------------------------------------------------------
    }
  }

  &.nav-close:hover rect {
    fill: $primary;
    width: #{$icon};

// Prevent hover on mobile -----------------------------------------------------
    @include mq(mobile) {
      fill: $white!important;
// -----------------------------------------------------------------------------
    }
  }
// -----------------------------------------------------------------------------
}
